spring.application.name=loja_virtual
spring.datasource.url=jdbc:postgresql://localhost:5432/loja_virtual?autoreconnect=true
spring.datasource.username=sdasdasd
spring.datasource.password=sadasd
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.platform=postgres

#Evita erros de metadados do banco de dados
spring.jpa.properties.hibernate.temp.use_jdbc_metada_defaults = true

#Indicando o banco de dados.
spring.jpa.database-platform = org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

#Define o contexto para saber qual projeto manipular
server.servlet.context-path=/lojavirtual

#Definindo as propriedades de upload da requisição
spring.servlet.multipart.max-file-size = 10000KB
spring.servlet.multipart.max-request-size = 10000KB
spring.servlet.multipart.enabled = true 

#Comprime os dados para melhorar a performace
server.compression.enabled = true 
server.compression.mime-types = text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size = 1024
server.http2.enabled = true 

#Evita caracteres estranhos de acentos, simbolos, etc
spring.http.encoding.charset = UTF-8
spring.http.encoding.enabled = true 
spring.http.encoding.force = true 
spring.http.encoding.force-request = true 
spring.http.encoding.force-response= true

#Define a quantidade de conexões possíveis ao mesmo tempo por clientes
spring.datasource.type = com.zaxxer.hikari.HikariDataSource

#número máximo de milisegundos que um cliente aguardará por uma conexão
spring.datasource.hikari.connection-timeout = 20000

#número mínimo de conexões inativas mantidas pelo HikariCP em um conjunto de conexões
spring.datasource.hikari.minimum-idle = 200

#Máximo do pool de conexão
spring.datasource.hikari.maximum-pool-size = 550

#Tempo ociosos para conexão
spring.datasource.hikari.idle-timeout = 10000
spring.datasource.hikari.pool-name = PoolHikari

#Quantidade de processos e portas abertas para conexões de sqls e execuções no banco de dados
spring.datasource.dbcp2.pool-prepared-statements = true 
spring.datasource.dbcp2.max-open-prepared-statements = 550

#Salvando dados no banco automaticamente
spring.datasource.hikari.auto-commit = false

#server.servlet.session.timeout = 240m

#Se falhar dá rollback
spring.transaction.rollback-on-commit-failure = true


spring.jpa.properties.hibernate.jdbc.batch_size = 4
spring.jpa.properties.hibernate.order_inserts = true
spring.jpa.properties.hibernate.order_updates = true

#define pro tomcat até 50000 conexões
server.tomcat.max-connections = 50000

#Ativa processamento de performeces
server.tomcat.min-spare-threads = 1000

#limpar a sujeita a cada 4 horas
spring.session.jdbc.cleanup-cron = 0 0 4 * * *

spring.mvc.pathmatch.matching-strategy=ant-path-matcher

spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.check-location=true
spring.flyway.baseline-version=1
spring.flyway.sql-migration-prefix=V
spring.flyway.sql-migration-separator=__
spring.flyway.sql-migration-suffixes=.sql

spring.mvc.static-path-pattern = /resoures/static/**